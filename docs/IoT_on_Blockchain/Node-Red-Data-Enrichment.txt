[{"id":"c507fcd1.26f0e","type":"ibmiot in","z":"30b14fb4.eeb74","authentication":"apiKey","apiKey":"<your-watson-iotp-apikey>","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Listen for All Events","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allLogicalInterfaces":false,"allEvents":true,"allCommands":"","allFormats":"","qos":0,"x":247,"y":220,"wires":[["3363f579.9be77a"]]},{"id":"8414c5d0.fbf6c8","type":"debug","z":"30b14fb4.eeb74","name":"Debug","active":true,"console":"false","complete":"payload","x":1010,"y":445,"wires":[]},{"id":"b10d294.fc859d8","type":"http request","z":"30b14fb4.eeb74","name":"POST to IoT Blockchain","method":"POST","ret":"txt","url":"https://iot-blockchain.ibm.com/api/v1/<your_IoTBlockchain_org>/tx/iotsensor_device/UNUSED/IoTDeviceReading","tls":"","x":990,"y":345,"wires":[["8414c5d0.fbf6c8"]]},{"id":"3363f579.9be77a","type":"function","z":"30b14fb4.eeb74","name":"Set doc id","func":"// Replace \"class\" with \"$class\" needed for \n// Composer, since $class is not allowed by IoTP.\n// $class is used to indicate which transaction\n// in the contract is being called.\nvar str = JSON.stringify(msg.payload);\nvar res = str.replace(\"class\", \"$class\");\nmsg.payload = JSON.parse(res);\n\n// Save off device data payload in global context\nvar fctxt = this.context.flow;\nfctxt.set('device_payload', msg.payload);\n\n// id is the doc id to retrieve from cloudant\n// Modify this according to your database schema\nmsg.payload.id = msg.payload.shipment.device_id;\n\nreturn msg;","outputs":1,"noerr":0,"x":496,"y":220,"wires":[["f43b23fd.d5c37"]]},{"id":"f2a01d95.b3ac7","type":"comment","z":"30b14fb4.eeb74","name":"Add your own IoTP API key and token","info":"Modify the \"IBM IoT MQTT Listener\" ibmiot node \nto use your own API key and authentication \ntoken.  In the IoTP UI, click on your org in \nthe upper right to generate a new API key \nand authentication token.","x":247,"y":180,"wires":[]},{"id":"f87fc473.8018b8","type":"function","z":"30b14fb4.eeb74","name":"Enrich IoT data","func":"// Get device data payload from global context\nvar fctxt = this.context.flow;\nvar device_payload = fctxt.get('device_payload');\n\n// Save off the current payload\nvar enrich_data = msg.payload;\n\n// Set msg.payload to be the device payload -\n// we know we want all attributes of the device payload\nmsg.payload = device_payload;\n\n// Merge the attributes from the enrichment \n// payload into the device payload \nvar keys = Object.keys(enrich_data);\nfor (var i = 0; i < keys.length; i++) {\n    var attr = keys[i];\n    var val = enrich_data[keys[i]];\n    if (attr != '_id' && attr != '_rev') {\n        // Modify based on your database schema\n        msg.payload.shipment[attr] = val;\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":345,"wires":[["8414c5d0.fbf6c8","b10d294.fc859d8"]]},{"id":"f43b23fd.d5c37","type":"cloudant in","z":"30b14fb4.eeb74","name":"Get doc for IoT device","cloudant":"78875384.7528bc","database":"iot-data-enrichment","service":"Cloudant-NoSQL-DB-enrichment","search":"_id_","design":"","index":"","x":742,"y":220,"wires":[["f87fc473.8018b8"]]},{"id":"465e9294.ee876c","type":"comment","z":"30b14fb4.eeb74","name":"Create database lookup node","info":"Implement a node to retrieve the enrichment data from your database.  In this case, attributes of a shipment object are retrieved from a Cloudant database, to be added to IoT data in the subsequent node.\n","x":752,"y":181,"wires":[]},{"id":"f9630e3b.84b3c","type":"comment","z":"30b14fb4.eeb74","name":"Create node to set doc id","info":"Implement a node to retrieve the doc id or primary key for the enrichment data you will enrich your IoT device data with. The next node will retrieve the enrichment data based on this key.","x":515,"y":180,"wires":[]},{"id":"a328f445.cdc258","type":"comment","z":"30b14fb4.eeb74","name":"Create enrichment node","info":"Implement a node to enrich your IoT data according to your DB schema.","x":744,"y":382,"wires":[]},{"id":"23ecaf78.67473","type":"comment","z":"30b14fb4.eeb74","name":"Send data to the blockchain","info":"Implement a node to send your IoT data to IoT Blockchain.  IoT Blockchain must be already configured for your blockchain.  Use your own route URL that you created during IoT Blockchain configuration.","x":1000,"y":307,"wires":[]},{"id":"78875384.7528bc","type":"cloudant","z":"","host":"347ebe83-3bd6-4f7d-8e99-2fb0412d2526-bluemix.cloudant.com:443","name":"Cloudant NoSQL DB-Enrichment"}]
