[{"id":"1ab02050.eb979","type":"ibmiot in","z":"13537f83.ed18f","authentication":"apiKey","apiKey":"<your-watson-iotp-apikey>","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Listen for All Events","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allLogicalInterfaces":false,"allEvents":true,"allCommands":"","allFormats":"","qos":0,"x":170,"y":275,"wires":[["d4617666.bfe428"]]},{"id":"aadd646.35cd698","type":"debug","z":"13537f83.ed18f","name":"Debug","active":true,"console":"false","complete":"payload","x":910,"y":500,"wires":[]},{"id":"fea841ed.4543","type":"http request","z":"13537f83.ed18f","name":"POST to IoT Blockchain","method":"POST","ret":"txt","url":"https://iot-blockchain.ibm.com/api/v1/<your_IoTBlockchain_org>/tx/iotsensor_device/UNUSED/IoTDeviceReading","tls":"","x":890,"y":400,"wires":[["aadd646.35cd698"]]},{"id":"d4617666.bfe428","type":"function","z":"13537f83.ed18f","name":"Add $class","func":"// Replace \"class\" with \"$class\" needed for \n// Composer, since $class is not allowed by IoTP.\nvar str = JSON.stringify(msg.payload);\nvar res = str.replace(\"class\", \"$class\");\nmsg.payload = JSON.parse(res);\n\n// Save off device data payload in global context\nvar fctxt = this.context.flow;\nfctxt.set('device_payload', msg.payload);\n\n// id is the doc id to retrieve from cloudant\nmsg.payload.id = msg.payload.shipment.device_id;\n\nreturn msg;","outputs":1,"noerr":0,"x":411,"y":275,"wires":[["278a0ae9.ae1526"]]},{"id":"75696cea.b73954","type":"comment","z":"13537f83.ed18f","name":"Add your own IoTP API key and token","info":"Modify the \"IBM IoT MQTT Listener\" ibmiot node \nto use your own API key and authentication \ntoken.  In the IoTP UI, click on your org in \nthe upper right to generate a new API key \nand authentication token.","x":170,"y":235,"wires":[]},{"id":"d1e2a620.708a78","type":"function","z":"13537f83.ed18f","name":"Enrich IoT data","func":"// Get device data payload from global context\nvar fctxt = this.context.flow;\nvar device_payload = fctxt.get('device_payload');\n\n// Save off the current payload\nvar enrich_data = msg.payload;\n\n// Set msg.payload to be the device payload -\n// we know we want all attributes of the device payload\nmsg.payload = device_payload;\n\n// Merge the attributes from the enrichment \n// payload into the device payload \nvar keys = Object.keys(enrich_data);\nfor (var i = 0; i < keys.length; i++) {\n    var attr = keys[i];\n    var val = enrich_data[keys[i]];\n    if (attr != '_id' && attr != '_rev') {\n        msg.payload.shipment[attr] = val;\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":400,"wires":[["aadd646.35cd698","fea841ed.4543"]]},{"id":"278a0ae9.ae1526","type":"cloudant in","z":"13537f83.ed18f","name":"Get doc for IoT device","cloudant":"78875384.7528bc","database":"iot-data-enrichment","service":"Cloudant-NoSQL-DB-enrichment","search":"_id_","design":"","index":"","x":642,"y":275,"wires":[["d1e2a620.708a78"]]},{"id":"ee709ae6.248798","type":"comment","z":"13537f83.ed18f","name":"Coudant lookup","info":"","x":638,"y":240,"wires":[]},{"id":"7492510.ab882b","type":"ibmiot","z":"","name":"API key","keepalive":"60","serverName":"<your_watson_iotp_org>.messaging.internetofthings.ibmcloud.com","cleansession":true,"appId":"","shared":false},{"id":"78875384.7528bc","type":"cloudant","z":"","host":"<your_cloudant_server>","name":"Cloudant NoSQL DB-Enrichment"}]
